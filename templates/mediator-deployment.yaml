apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mediator.name }}
  labels:
    {{- include "optox.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "optox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "optox.selectorLabels" . | nindent 8 }}
        deployment: {{ .Values.mediator.name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "optox.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-mediator
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.mediator.image.repository }}:{{ .Values.mediator.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.mediator.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.mediator.service.port }}
              protocol: TCP
          env:
            - name: "PGPOOL_POSTGRES_USERNAME"
              valueFrom:
                secretKeyRef:
                  key:  postgresUsername
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  postgresPassword
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_SR_CHECK_USER"
              valueFrom:
                secretKeyRef:
                  key:  postgresUsername
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_SR_CHECK_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  postgresPassword
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_USERNAME"
              valueFrom:
                secretKeyRef:
                  key:  postgresUsername
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  postgresPassword
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_ADMIN_USERNAME"
              valueFrom:
                secretKeyRef:
                  key:  pgpoolAdminUsername
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  pgpoolAdminPassword
                  name: {{ .Release.Name }}-auth
            - name: "PGPOOL_BACKEND_NODES"
              value: {{ .Values.mediator.backendNodes }}
            - name: "PGPOOL_ENABLE_LDAP"
              value: "no"
            - name: "PGPOOL_DISABLE_LOAD_BALANCE_ON_WRITE"
              value: "always"
            - name: "PGPOOL_USER_CONF_FILE"
              value: "/etc/pgpool.conf"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
