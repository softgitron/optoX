apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.gateway.name }}
  labels:
    {{- include "optox.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "optox.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "optox.selectorLabels" . | nindent 8 }}
        deployment: {{ .Values.gateway.name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "optox.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-gateway
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.gateway.service.port }}
              protocol: TCP
            {{ if .Values.debug -}}
            - name: debug
              containerPort: {{ .Values.gateway.debugPort }}
              protocol: TCP
            {{- end }}
          env:
            - name: "REGION"
              value: {{ .Values.region }}
            - name: "POSTGRES_USER"
              valueFrom:
                secretKeyRef:
                  key:  postgresUsername
                  name: {{ .Release.Name }}-auth
            - name: "POSTGRES_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  postgresPassword
                  name: {{ .Release.Name }}-auth
            - name: "POSTGRES_DB"
              value: {{ .Values.database.databaseName }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
