# Default values for optox.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
debug: true

region: finland
webGuiCredentials:
  username: admin
  password: admin

database:
  name: database
  credentials:
    postgresUsername: "optox"
    postgresPassword: "optox"
  databaseName: optox
  image:
    repository: gcr.io/optox-298015/database
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 5432

frontend:
  name: frontend
  image:
    repository: gcr.io/optox-298015/frontend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080

gateway:
  name: gateway
  image:
    repository: gcr.io/optox-298015/gateway
    tag: latest
    pullPolicy: Always
  service:
    type: NodePort
    port: 8080
  debugPort: 40000
  jwtSecret: "AcOcpYvCwWzzNe4kAcBaPIynpejhNxZal7szlzm2GpygvCHGiCC8ixdAYs42Hvo"

mainbackend:
  name: mainbackend
  image:
    repository: gcr.io/optox-298015/mainbackend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
  debugPort: 40001

mediator:
  name: mediator
  image:
    repository: gcr.io/optox-298015/mediator
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 5432
  debugPort: 40002
  credentials:
    pgpoolAdminUsername: "optox"
    pgpoolAdminPassword: "optox"
  backendNodes: "0:database-central.finland.svc.cluster.local:5432:0,1:database:5432:1"

syncbackend:
  name: syncbackend
  image:
    repository: gcr.io/optox-298015/syncbackend
    tag: latest
    pullPolicy: Always
  service:
    type: ClusterIP
    httpPort: 8080
    syncPort: 5000
  debugPort: 40003

externalservices:
  - name: syncbackend
    namespace: central
    port: 8080
  - name: database
    namespace: central
    port: 5432
  - name: syncbackend
    namespace: sweden
    port: 8080
  - name: database
    namespace: sweden
    port: 5432
  - name: syncbackend
    namespace: norway
    port: 8080
  - name: database
    namespace: norway
    port: 5432

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

persistentVolume:
  storageClassName: standard

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "finland-static-ip"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: finland.sopala.fi
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

serviceAccount:
  # Specifies whether a service account should be created
  create: false

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
